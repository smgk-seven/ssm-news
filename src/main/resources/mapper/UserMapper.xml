<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smgk.news.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.smgk.news.bean.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_genre" jdbcType="CHAR" property="userGenre" />
    <result column="user_like" jdbcType="INTEGER" property="userLike" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, nick_name, email, password, user_genre, user_like
  </sql>
  <select id="selectByExample" parameterType="com.smgk.news.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.smgk.news.bean.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smgk.news.bean.User">
    insert into user (user_id, nick_name, email, 
      password, user_genre, user_like
      )
    values (#{userId,jdbcType=INTEGER}, #{nickName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userGenre,jdbcType=CHAR}, #{userLike,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.smgk.news.bean.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userGenre != null">
        user_genre,
      </if>
      <if test="userLike != null">
        user_like,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userGenre != null">
        #{userGenre,jdbcType=CHAR},
      </if>
      <if test="userLike != null">
        #{userLike,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smgk.news.bean.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userGenre != null">
        user_genre = #{record.userGenre,jdbcType=CHAR},
      </if>
      <if test="record.userLike != null">
        user_like = #{record.userLike,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      user_genre = #{record.userGenre,jdbcType=CHAR},
      user_like = #{record.userLike,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smgk.news.bean.User">
    update user
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userGenre != null">
        user_genre = #{userGenre,jdbcType=CHAR},
      </if>
      <if test="userLike != null">
        user_like = #{userLike,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smgk.news.bean.User">
    update user
    set nick_name = #{nickName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_genre = #{userGenre,jdbcType=CHAR},
      user_like = #{userLike,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <!-- 查找所有用户并带喜欢类别信息 
  
    List<User> getAllUserAndLikegenre();
  -->
	<resultMap type="com.smgk.news.bean.User" id="AllUserAndLikegenreResu">
		<id column="user_id" jdbcType="INTEGER" property="userId" />
	    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
	    <result column="email" jdbcType="VARCHAR" property="email" />
	    <result column="password" jdbcType="VARCHAR" property="password" />
	    <result column="user_genre" jdbcType="CHAR" property="userGenre" />
	    <result column="user_like" jdbcType="INTEGER" property="userLike" />
		    <association property="likeGenre" select="com.smgk.news.dao.GenreMapper.selectByPrimaryKey" column="user_like">
		    	 <id column="genre_id" jdbcType="INTEGER" property="genreId" />
	    		 <result column="genre_name" jdbcType="VARCHAR" property="genreName" />
		    </association>
	</resultMap>
	<select id="getAllUserAndLikegenre" resultMap="AllUserAndLikegenreResu">
		select * from user
	</select>
	
	<!-- 
			//查找vip用户带类别
    		List<User> getVipUserAndLikegenre();
	 -->
	<select id="getVipUserAndLikegenre" resultMap="AllUserAndLikegenreResu">
		select * from user
		<where>
			user_genre='1'
		</where>
	</select>
	<!-- //查找普通用户带类别
   		 List<User> getBTUserAndLikegenre();
     -->
	<select id="getBTUserAndLikegenre" resultMap="AllUserAndLikegenreResu">
		select * from user
		<where>
			user_genre='0'
		</where>
	</select>
	<!-- 
		//查找管理员带类别
	    List<User> getManUserAndLikegenre();
	 -->
	<select id="getManUserAndLikegenre" resultMap="AllUserAndLikegenreResu">
		select * from user
		<where>
			user_genre='2'
		</where>
	</select>
  
</mapper>