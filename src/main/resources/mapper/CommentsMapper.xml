<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smgk.news.dao.CommentsMapper">
  <resultMap id="BaseResultMap" type="com.smgk.news.bean.Comments">
    <id column="comments_id" jdbcType="INTEGER" property="commentsId" />
    <result column="comments_content" jdbcType="VARCHAR" property="commentsContent" />
    <result column="comments_time" jdbcType="TIMESTAMP" property="commentsTime" />
    <result column="comments_user" jdbcType="INTEGER" property="commentsUser" />
    <result column="comments_news" jdbcType="INTEGER" property="commentsNews" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    comments_id, comments_content, comments_time, comments_user, comments_news
  </sql>
  <select id="selectByExample" parameterType="com.smgk.news.bean.CommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comments
    where comments_id = #{commentsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comments
    where comments_id = #{commentsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.smgk.news.bean.CommentsExample">
    delete from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smgk.news.bean.Comments">
    insert into comments (comments_id, comments_content, comments_time, 
      comments_user, comments_news)
    values (#{commentsId,jdbcType=INTEGER}, #{commentsContent,jdbcType=VARCHAR}, #{commentsTime,jdbcType=TIMESTAMP}, 
      #{commentsUser,jdbcType=INTEGER}, #{commentsNews,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.smgk.news.bean.Comments">
    insert into comments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commentsId != null">
        comments_id,
      </if>
      <if test="commentsContent != null">
        comments_content,
      </if>
      <if test="commentsTime != null">
        comments_time,
      </if>
      <if test="commentsUser != null">
        comments_user,
      </if>
      <if test="commentsNews != null">
        comments_news,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commentsId != null">
        #{commentsId,jdbcType=INTEGER},
      </if>
      <if test="commentsContent != null">
        #{commentsContent,jdbcType=VARCHAR},
      </if>
      <if test="commentsTime != null">
        #{commentsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentsUser != null">
        #{commentsUser,jdbcType=INTEGER},
      </if>
      <if test="commentsNews != null">
        #{commentsNews,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smgk.news.bean.CommentsExample" resultType="java.lang.Long">
    select count(*) from comments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comments
    <set>
      <if test="record.commentsId != null">
        comments_id = #{record.commentsId,jdbcType=INTEGER},
      </if>
      <if test="record.commentsContent != null">
        comments_content = #{record.commentsContent,jdbcType=VARCHAR},
      </if>
      <if test="record.commentsTime != null">
        comments_time = #{record.commentsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.commentsUser != null">
        comments_user = #{record.commentsUser,jdbcType=INTEGER},
      </if>
      <if test="record.commentsNews != null">
        comments_news = #{record.commentsNews,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comments
    set comments_id = #{record.commentsId,jdbcType=INTEGER},
      comments_content = #{record.commentsContent,jdbcType=VARCHAR},
      comments_time = #{record.commentsTime,jdbcType=TIMESTAMP},
      comments_user = #{record.commentsUser,jdbcType=INTEGER},
      comments_news = #{record.commentsNews,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smgk.news.bean.Comments">
    update comments
    <set>
      <if test="commentsContent != null">
        comments_content = #{commentsContent,jdbcType=VARCHAR},
      </if>
      <if test="commentsTime != null">
        comments_time = #{commentsTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentsUser != null">
        comments_user = #{commentsUser,jdbcType=INTEGER},
      </if>
      <if test="commentsNews != null">
        comments_news = #{commentsNews,jdbcType=INTEGER},
      </if>
    </set>
    where comments_id = #{commentsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smgk.news.bean.Comments">
    update comments
    set comments_content = #{commentsContent,jdbcType=VARCHAR},
      comments_time = #{commentsTime,jdbcType=TIMESTAMP},
      comments_user = #{commentsUser,jdbcType=INTEGER},
      comments_news = #{commentsNews,jdbcType=INTEGER}
    where comments_id = #{commentsId,jdbcType=INTEGER}
  </update>
  <!-- List<Comments> getNewsCommentsById(int newsId); -->
  <resultMap id="getNewsCommentsByIdMap" type="com.smgk.news.bean.Comments">
    <id column="comments_id" jdbcType="INTEGER" property="commentsId" />
    <result column="comments_content" jdbcType="VARCHAR" property="commentsContent" />
    <result column="comments_time" jdbcType="TIMESTAMP" property="commentsTime" />
    <result column="comments_user" jdbcType="INTEGER" property="commentsUser" />
    <result column="comments_news" jdbcType="INTEGER" property="commentsNews" />
	     <association property="user" select="com.smgk.news.dao.UserMapper.selectByPrimaryKey" column="comments_user">
	    	<id column="user_id" jdbcType="INTEGER" property="userId" />
		    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
		    <result column="email" jdbcType="VARCHAR" property="email" />
		    <result column="password" jdbcType="VARCHAR" property="password" />
		    <result column="user_genre" jdbcType="CHAR" property="userGenre" />
		    <result column="user_like" jdbcType="INTEGER" property="userLike" />		
	    </association>
  </resultMap>
  <select id="getNewsCommentsById" resultMap="getNewsCommentsByIdMap">
    select * from comments 
    <where>
     comments_news=#{newsId}
    </where>
  </select>
</mapper>